@{
    ViewData["Title"] = "Home Page";
}

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
        padding: 20px;
        background-color: #f4f4f4;
    }
    h1, h2 {
        color: #333;
    }
    .container {
        max-width: 800px;
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    img {
        width: 100%;
        max-width: 600px;
        display: block;
        margin: 10px 0;
    }
</style>



 <div class="container">
        <h1>Шаблон проектування MVC</h1>
        <p>Шаблон проектування <strong>MVC (Model-View-Controller)</strong> — це архітектурний підхід, який розділяє застосунок на три основні компоненти: <strong>Модель (Model), Представлення (View) і Контролер (Controller)</strong>. Такий підхід спрощує управління та підтримку коду, сприяє повторному використанню компонентів і забезпечує модульність розробки.</p>
         
        <div>
            <img src="https://developer.mozilla.org/en-US/docs/Glossary/MVC/model-view-controller-light-blue.png" alt="Alternate Text" />
        </div>

        <h2 id="what-is-mvc">Що таке шаблон проектування MVC?</h2>
        <p><strong>Model-View-Controller (MVC)</strong> визначає, що застосунок складається з трьох окремих частин: моделі даних, інтерфейсу користувача та керуючої логіки. Відповідно до цього підходу, кожен із цих компонентів реалізується окремо, що дозволяє розподіляти відповідальність між різними частинами коду.</p>
        <p>Розділення застосунку на незалежні компоненти полегшує його супровід і розширення. Зміни в одному з елементів не вимагають змін в інших, що робить архітектуру більш гнучкою.</p>

        <h2 id="why-mvc">Чому варто використовувати MVC?</h2>
        <p>Шаблон MVC ділить застосунок на три частини:</p>
        <ul>
            <li><strong>Model</strong> — керує даними та бізнес-логікою.</li>
            <li><strong>View</strong> — відповідає за відображення інформації користувачеві.</li>
            <li><strong>Controller</strong> — обробляє запити користувача та керує взаємодією між Model і View.</li>
        </ul>
        <p>Завдяки цьому підходу:</p>
        <ul>
            <li>Кожен компонент можна розробляти незалежно, що спрощує внесення змін.</li>
            <li>Легше впроваджувати нові функції без ризику порушення загальної роботи системи.</li>
            <li>Спрощується тестування окремих модулів.</li>
            <li>Покращується організація коду та підвищується якість програмного забезпечення.</li>
        </ul>

        <h2 id="components">Компоненти шаблону проектування MVC</h2>
        <p>Шаблон MVC складається з трьох основних частин:</p>
        <ul>
            <li><strong>Model (Модель)</strong> – керує даними, виконує бізнес-логіку та взаємодіє з базою даних.</li>
            <li><strong>View (Представлення)</strong> – відповідає за відображення інформації та інтерфейс користувача.</li>
            <li><strong>Controller (Контролер)</strong> – отримує запити від користувача, обробляє їх і оновлює Model та View.</li>
        </ul>

    <img src="https://s.dou.ua/storage-files/4-MVC.png" alt="Діаграма MVC">
        <p>Цей підхід допомагає створювати масштабовані та структуровані застосунки, полегшуючи їхню підтримку та розвиток.</p>
</div>
